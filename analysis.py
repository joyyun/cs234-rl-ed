
covariates = ["attendance_1", "rating_1", "talktime_tutor_pct_1",
    "spoken_token_tutor_pct_1", "chat_token_tutor_pct_1", "length_utterance_tutor_1",
    "length_utterance_student_1", "length_utterance_tutor_chat_1", "length_utterance_student_chat_1",
    "ratio_students_engaged_1", "normalized_num_turns_1",
    "normalized_num_high_uptakes_1", "normalized_num_eliciting_1", "normalized_num_questions_students_1",
    "normalized_num_questions_tutor_1", "normalized_student_reasoning_1", "min_sat_score_series",
    "max_sat_score_series", "grade_for_session_1"]

coeffs = {'talktime': {
        # lambda = 
        'control': [-0.0213983995579452, -0.00432292062758106, 0.00186129260845821, 0.0187814122376992, 0.00576279774791715, 0.00281339572187086, 0.000479702831379055, -0.00379939795028999, 0.00139066281869026, 0.000599986469843706, 0.00289367448557689, -0.00367025614156767, 0.00027864617359792, 0.00645953347802636, 0.0047713821274971, 0.00708779814524717, -0.00353920541839093, 0.00660805018556954, 0.00660805018556955, 0.00374032182555888],
        # lambda = 
        'tutor': [-0.0177998844741972, -0.0108840813848982, 0.0101652370377692, 0.0775284935601696, -0.0134041771289552, 0.00661872806279065, -0.00292252269881851, -0.00157409309618056, -0.00531217541282431, 0.00066339282562993, 0.00694610445353333, 0.00307617979722668, 0.00860289861712742, -0.00580779691546534, 0.00475290451229728, -0.00507479095564265, 0.0111898535145088, 0.00251666322127574, 0.00251666322127565, 0.0092408503347564],
        # lambda = 
        'tutor_student_social': [-0.0234893953589861, -0.00746869163750272, -0.00596901299841161, 0.0766603716821685, -0.000779802323225226, -0.0163610191723378, -0.017216195621611, 0.00185353477219785, -0.00395267963460912, -0.00550196077960453, 0.0064550329054404, -0.0269692704932756, -0.024178433486178, -0.00518288129994655, 0.00496485940017788, 0.0498084687116614, 0.0034958045652586, -0.00241912671520671, -0.00241912671520691, 0.0124198681988322],
        # lambda = 
        'tutor_student_personal': [-0.0352637888418595, -0.00333099540686286, 0.00236925302612274, 0.0837088629915852, -0.00102281934900719, -0.0076899920483565, 0.000475509836623345, -0.00714650276570121, -0.0027717648910628, 0.00439642454790023, 0.00121077489398763, 0.00579081965131519, 0.0092245844580168, 0.00486694916466281, -0.00186926486500018, 0.0242629395689407, -0.00714525326090928, 0.00875963038930546, 0.00875963038930548, -0.000855573645592763],
    }
}

def three_largest_values(lst):
    unique_values = list(set(lst))
    largest_values = unique_values[-3:]
    
    indices = [i for i, value in enumerate(lst) if value in largest_values]
    
    return indices

for reward in coeffs['talktime']:
    vals = coeffs['talktime'][reward]
    largest = three_largest_values(vals)
    print("\n" + reward)
    for elem in largest:
        print(covariates[elem])